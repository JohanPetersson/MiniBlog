<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Convert symbol to unicode</title>
  <slug>convert-symbol-to-unicode</slug>
  <author>Johan</author>
  <pubDate>2009-12-16 17:28:32</pubDate>
  <lastModified>2013-11-13 05:39:47</lastModified>
  <content>
		&lt;p&gt;Lately I´ve been working a lot with migrating technical documents to EPiServer. These documents often contained &lt;/p&gt;  &lt;pre class="prettyprint"&gt;&amp;lt;font face="symbol"&amp;gt;W&amp;lt;/font&amp;gt;&lt;/pre&gt;

&lt;p&gt;instead of Ω.&lt;/p&gt;

&lt;p&gt;So I made a function that converts symbols to unicode characters.&lt;/p&gt;



&lt;p&gt;&lt;em&gt;The code was updated 2009-12-17. I´m using Dictionary&amp;lt;string, string&amp;gt; instead.&lt;/em&gt;&lt;/p&gt;

&lt;pre class="prettyprint"&gt;private static string ConvertSymbolToUnicode(string symbols)
{
    Dictionary&amp;lt;string, string&amp;gt; chars = new Dictionary&amp;lt;string, string&amp;gt;();

    chars.Add("a", "α");
    chars.Add("b", "β");
    chars.Add("c", "χ");
    chars.Add("d", "δ");
    chars.Add("e", "ε");
    chars.Add("f", "φ");
    chars.Add("g", "γ");
    chars.Add("h", "η");
    chars.Add("i", "ι");
    chars.Add("j", "ϕ");
    chars.Add("k", "κ");
    chars.Add("l", "λ");
    chars.Add("m", "μ");
    chars.Add("n", "ν");
    chars.Add("o", "ο");
    chars.Add("p", "π");
    chars.Add("q", "θ");
    chars.Add("r", "ρ");
    chars.Add("s", "σ");
    chars.Add("t", "τ");
    chars.Add("u", "υ");
    chars.Add("v", "ϖ");
    chars.Add("w", "ω");
    chars.Add("x", "ξ");
    chars.Add("y", "ψ");
    chars.Add("z", "ζ");
    chars.Add("å", "∑");
    chars.Add("ä", "™");
    chars.Add("ö", "?");
    chars.Add("A", "Α");
    chars.Add("B", "Β");
    chars.Add("C", "Χ");
    chars.Add("D", "Δ");
    chars.Add("E", "Ε");
    chars.Add("F", "Φ");
    chars.Add("G", "Γ");
    chars.Add("H", "Η");
    chars.Add("I", "Ι");
    chars.Add("J", "ϑ");
    chars.Add("K", "Κ");
    chars.Add("L", "Λ");
    chars.Add("M", "Μ");
    chars.Add("N", "Ν");
    chars.Add("O", "Ο");
    chars.Add("P", "Π");
    chars.Add("Q", "Θ");
    chars.Add("R", "Ρ");
    chars.Add("S", "Σ");
    chars.Add("T", "Τ");
    chars.Add("U", "Υ");
    chars.Add("V", "ς");
    chars.Add("W", "Ω");
    chars.Add("X", "Ξ");
    chars.Add("Y", "Ψ");
    chars.Add("Z", "Z");
    chars.Add("Å", "⊕");
    chars.Add("Ä", "⊗");
    chars.Add("Ö", "√");
    chars.Add("`", "?");
    chars.Add("1", "1");
    chars.Add("2", "2");
    chars.Add("3", "3");
    chars.Add("4", "4");
    chars.Add("5", "5");
    chars.Add("6", "6");
    chars.Add("7", "7");
    chars.Add("8", "8");
    chars.Add("9", "9");
    chars.Add("0", "0");
    chars.Add("-", "−");
    chars.Add("=", "=");
    chars.Add("\\", "∴");
    chars.Add("[", "[");
    chars.Add("]", "]");
    chars.Add(";", ";");
    chars.Add("'", "∍");
    chars.Add(",", ",");
    chars.Add(".", ".");
    chars.Add("/", "/");
    chars.Add("~", "~");
    chars.Add("!", "!");
    chars.Add("@", "≅");
    chars.Add("#", "#");
    chars.Add("$", "∃");
    chars.Add("%", "%");
    chars.Add("^", "⊥");
    chars.Add("&amp;amp;", "&amp;amp;");
    chars.Add("*", "∗");
    chars.Add("(", "(");
    chars.Add(")", ")");
    chars.Add("_", "_");
    chars.Add("+", "+");
    chars.Add("|", "|");
    chars.Add("{", "{");
    chars.Add("}", "}");
    chars.Add(":", ":");
    chars.Add("\"", "∀");
    chars.Add("&amp;lt;", "&amp;lt;");
    chars.Add("&amp;gt;", "&amp;gt;");
    chars.Add("?", "?");
    chars.Add("£", "≤");
    chars.Add("¤", "⁄");

    string returnValue = string.Empty;

    foreach (char symbol in symbols.Trim().ToCharArray())
    {
        if (chars.ContainsKey(symbol.ToString()))
        {
            returnValue += chars[symbol.ToString()];
        }
    }

    return returnValue;
}&lt;/pre&gt;

&lt;p&gt;And in my case I used it with following code:&lt;/p&gt;

&lt;pre class="prettyprint"&gt;output = Regex.Replace(output, 
    "&amp;lt;font[^&amp;gt;]*face=\"symbol\"[^&amp;gt;]*&amp;gt;(?&amp;lt;symbols&amp;gt;[^&amp;lt;]*)&amp;lt;/font&amp;gt;",
    m =&amp;gt; ConvertSymbolToUnicode(m.Groups["symbols"].Value), 
    RegexOptions.Compiled | RegexOptions.IgnoreCase);&lt;/pre&gt;
	</content>
  <ispublished>true</ispublished>
  <categories>
    <category>Episerver</category>
  </categories>
  <comments></comments>
</post>